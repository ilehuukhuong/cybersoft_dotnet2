@page "/register"
@using Session26_validation_component_razor.Models
@inject NavigationManager Navigation

<h3>Course Registration Form</h3>

<EditForm Model="registrationModel">
    <DataAnnotationsValidator />
    
    <div class="form-group">
        <label>Full Name *</label>
        <input type="text" @bind="registrationModel.FullName" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.FullName)" />
    </div>

    <div class="form-group">
        <label>Email *</label>
        <input type="email" @bind="registrationModel.Email" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.Email)" />
    </div>

    <div class="form-group">
        <label>Phone Number *</label>
        <input type="text" @bind="registrationModel.PhoneNumber" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.PhoneNumber)" />
    </div>

    <div class="form-group">
        <label>Select Course *</label>
        <select @bind="registrationModel.SelectedCourse" class="form-control">
            <option>Choose...</option>
            <option value="C#">C#</option>
            <option value="ASP.NET Core">ASP.NET Core</option>
            <option value="Blazor">Blazor</option>
        </select>
        <ValidationMessage For="@(() => registrationModel.SelectedCourse)" />
    </div>

    <div class="form-group">
        <label>Study Mode *</label>
        <div>
            <input type="radio" id="online" name="online" value="Online" @onchange="HandleChange"
                    checked="@(registrationModel.StudyMode == "Online")" />
                <label>Online</label>
                <input type="radio" id="offline" name="offline" value="Offline" @onchange="HandleChange"
                    checked="@(registrationModel.StudyMode == "Offline")" />
                <label>Offline</label>
        </div>
        <ValidationMessage For="@(() => registrationModel.StudyMode)" />
    </div>

    <div class="form-group">
        <label>Preferred Start Date *</label>
        <input type="date" @bind="registrationModel.StartDate" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.StartDate)" />
    </div>

    <div class="form-group">
        <label>Comments or Notes</label>
        <textarea @bind="registrationModel.Comments" class="form-control"></textarea>
    </div>

    <div class="form-group">
        <input type="checkbox" @bind="registrationModel.Agree" />
        <label>I agree to the terms and conditions *</label>
        <ValidationMessage For="@(() => registrationModel.Agree)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private CourseRegistrationModel registrationModel = new CourseRegistrationModel();

    private void HandleChange(ChangeEventArgs e)
    {
        @* Nếu event không có value thì sẽ lấy Male làm value mặc định *@
        registrationModel.StudyMode = e.Value?.ToString() ?? "Male";
    }
}
